pipeline {
    agent any 
    
    tools {
        maven 'Maven3'
    }
    
    stages {
        
        stage('Checkout') {
           steps {
           checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: '3f1e3225-53a8-4846-8783-32c34d92f085', url: 'https://github.com/okadjenn/MyNewApplicationRepo2']]])
           } 
        }
        
        stage('Build') {
           steps {
            sh 'mvn clean install -f MyWebApp/pom.xml'
           } 
        }
        
        stage('Code Quality') {
            steps {
                  withSonarQubeEnv('Sonarqube') {
                  sh 'mvn sonar:sonar -f MyWebApp/pom.xml'
                }
            }
        }
        
        stage('Nexus Upload') {
            steps {
               nexusArtifactUploader artifacts: [[artifactId: 'MyWebApp', classifier: '', file: 'MyWebApp/target/MyWebApp.war', type: 'war']], credentialsId: 'ed3db8a1-862d-427b-a62f-f8ffa2938ba1', groupId: 'com.dept.app', nexusUrl: 'ec2-52-91-135-42.compute-1.amazonaws.com:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'maven-snapshots', version: '1.0-SNAPSHOT'
            }
       }
       
       stage('DEV Deploy') {
           steps {
             deploy adapters: [tomcat9(credentialsId: 'ffdc2e37-0d0c-412e-b149-7879ed8296ce', path: '', url: 'http://ec2-100-25-41-238.compute-1.amazonaws.com:8080')], contextPath: null, war: '**/*.war'   
           }
        }
        
        stage('DEV approval') {
            steps {
                  echo "Taking approval from DEV Manager for QA Deployment" 
                  timeout(time: 7, unit: 'DAYS') {
                  input message: 'Do you want to deployin QA?', submitter: 'admin'
                }
            }
        }
        
        stage('QA Deploy') {
            steps {
              deploy adapters: [tomcat9(credentialsId: 'ffdc2e37-0d0c-412e-b149-7879ed8296ce', path: '', url: 'http://ec2-100-25-41-238.compute-1.amazonaws.com:8080')], contextPath: null, war: '**/*.war' 
            }
            
        }
        
        
    }
}
